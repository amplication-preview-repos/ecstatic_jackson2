/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { CrmDataUpdateManyWithoutBotsInput } from "./CrmDataUpdateManyWithoutBotsInput";
import { Type } from "class-transformer";
import { EnumBotLanguageModel } from "./EnumBotLanguageModel";
import { SubscriptionUpdateManyWithoutBotsInput } from "./SubscriptionUpdateManyWithoutBotsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class BotUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  active?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => CrmDataUpdateManyWithoutBotsInput,
  })
  @ValidateNested()
  @Type(() => CrmDataUpdateManyWithoutBotsInput)
  @IsOptional()
  @Field(() => CrmDataUpdateManyWithoutBotsInput, {
    nullable: true,
  })
  crmDataItems?: CrmDataUpdateManyWithoutBotsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  customPrompts?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumBotLanguageModel,
  })
  @IsEnum(EnumBotLanguageModel)
  @IsOptional()
  @Field(() => EnumBotLanguageModel, {
    nullable: true,
  })
  languageModel?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutBotsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutBotsInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutBotsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutBotsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { BotUpdateInput as BotUpdateInput };
