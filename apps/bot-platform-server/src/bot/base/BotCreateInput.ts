/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { CrmDataCreateNestedManyWithoutBotsInput } from "./CrmDataCreateNestedManyWithoutBotsInput";
import { Type } from "class-transformer";
import { EnumBotLanguageModel } from "./EnumBotLanguageModel";
import { SubscriptionCreateNestedManyWithoutBotsInput } from "./SubscriptionCreateNestedManyWithoutBotsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class BotCreateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  active?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => CrmDataCreateNestedManyWithoutBotsInput,
  })
  @ValidateNested()
  @Type(() => CrmDataCreateNestedManyWithoutBotsInput)
  @IsOptional()
  @Field(() => CrmDataCreateNestedManyWithoutBotsInput, {
    nullable: true,
  })
  crmDataItems?: CrmDataCreateNestedManyWithoutBotsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  customPrompts?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumBotLanguageModel,
  })
  @IsEnum(EnumBotLanguageModel)
  @IsOptional()
  @Field(() => EnumBotLanguageModel, {
    nullable: true,
  })
  languageModel?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionCreateNestedManyWithoutBotsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionCreateNestedManyWithoutBotsInput)
  @IsOptional()
  @Field(() => SubscriptionCreateNestedManyWithoutBotsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionCreateNestedManyWithoutBotsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { BotCreateInput as BotCreateInput };
